{"ast":null,"code":"var _jsxFileName = \"/home/julia/primarymeal/client/src/components/interface/Form.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport AsyncSelect from 'react-select/async';\nimport makeAnimated from 'react-select/animated';\nimport styles from './Form.module.css';\nimport { getScrollParent } from \"react-select/src/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  option: (provided, state) => ({ ...provided,\n    borderBottom: '1px dotted pink',\n    color: state.isSelected ? 'red' : 'blue',\n    padding: 20\n  }),\n  control: provided => ({ ...provided\n  }),\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n    return { ...provided,\n      opacity,\n      transition\n    };\n  }\n};\n\nfunction Form({\n  setFruit,\n  setResult,\n  fruit\n}) {\n  _s();\n\n  const [inputValue, setValue] = useState(\"\");\n\n  const handleInputChange = value => {\n    setValue(value);\n  };\n\n  const handleChange = value => {\n    setFruit(value);\n  };\n\n  const loadOptions = () => {\n    console.log(inputValue);\n    return fetch(\"/fruits\").then(res => res.json()).then(res => res['names'].filter(a => a.value.includes(inputValue)));\n  };\n\n  function handleSubmit(event) {\n    console.log(fruit);\n    event.preventDefault();\n    setResult(\"\");\n    const post_options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: fruit\n      })\n    };\n    fetch(\"/fruits\", post_options).then(res => res.json()).then(res => setResult(res['processed']));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.glass,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        cacheOptions: true,\n        defaultOptions: true,\n        value: fruit,\n        loadOptions: loadOptions,\n        onInputChange: handleInputChange,\n        onChange: handleChange,\n        isMulti: true,\n        autoFocus: true,\n        placeholder: \"Type one or several ingredients\",\n        components: {\n          DropdownIndicator: () => null,\n          IndicatorSeparator: () => null\n        },\n        openMenuOnFocus: false,\n        openMenuOnClick: false,\n        className: styles.classAsync,\n        styles: customStyles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Form, \"7QN4NqLR3Vp8npxc67Fuyl7Q+NM=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/julia/primarymeal/client/src/components/interface/Form.js"],"names":["useState","AsyncSelect","makeAnimated","styles","getScrollParent","customStyles","option","provided","state","borderBottom","color","isSelected","padding","control","singleValue","opacity","isDisabled","transition","Form","setFruit","setResult","fruit","inputValue","setValue","handleInputChange","value","handleChange","loadOptions","console","log","fetch","then","res","json","filter","a","includes","handleSubmit","event","preventDefault","post_options","method","headers","body","JSON","stringify","data","glass","DropdownIndicator","IndicatorSeparator","classAsync"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,wBAAhC;;AAIA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,CAACC,QAAD,EAAWC,KAAX,MAAsB,EAC5B,GAAGD,QADyB;AAE5BE,IAAAA,YAAY,EAAE,iBAFc;AAG5BC,IAAAA,KAAK,EAAEF,KAAK,CAACG,UAAN,GAAmB,KAAnB,GAA2B,MAHN;AAI5BC,IAAAA,OAAO,EAAE;AAJmB,GAAtB,CADS;AAOjBC,EAAAA,OAAO,EAAGN,QAAD,KAAe,EACpB,GAAGA;AADiB,GAAf,CAPQ;AAUjBO,EAAAA,WAAW,EAAE,CAACP,QAAD,EAAWC,KAAX,KAAqB;AAChC,UAAMO,OAAO,GAAGP,KAAK,CAACQ,UAAN,GAAmB,GAAnB,GAAyB,CAAzC;AACA,UAAMC,UAAU,GAAG,eAAnB;AAEA,WAAO,EAAE,GAAGV,QAAL;AAAeQ,MAAAA,OAAf;AAAwBE,MAAAA;AAAxB,KAAP;AACD;AAfgB,CAArB;;AAkBA,SAASC,IAAT,CAAc;AAACC,EAAAA,QAAD;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA;AAAtB,CAAd,EAA4C;AAAA;;AAExC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBvB,QAAQ,CAAC,EAAD,CAAvC;;AAEA,QAAMwB,iBAAiB,GAAGC,KAAK,IAAI;AAACF,IAAAA,QAAQ,CAACE,KAAD,CAAR;AAAgB,GAApD;;AAEA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAACN,IAAAA,QAAQ,CAACM,KAAD,CAAR;AAAgB,GAA/C;;AAEA,QAAME,WAAW,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACA,WAAOQ,KAAK,CAAC,SAAD,CAAL,CACFC,IADE,CACGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADV,EAEFF,IAFE,CAEGC,GAAG,IAAIA,GAAG,CAAC,OAAD,CAAH,CAAaE,MAAb,CAAqBC,CAAD,IAAOA,CAAC,CAACV,KAAF,CAAQW,QAAR,CAAiBd,UAAjB,CAA3B,CAFV,CAAP;AAGC,GALL;;AAOA,WAASe,YAAT,CAAsBC,KAAtB,EAA6B;AACzBV,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACAiB,IAAAA,KAAK,CAACC,cAAN;AACAnB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACA,UAAMoB,YAAY,GAAG;AACjBC,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,OAAO,EAAE;AAAC,wBAAiB;AAAlB,OAFQ;AAGjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,IAAI,EAAEzB;AAAR,OAAf;AAHW,KAArB;AAMAS,IAAAA,KAAK,CAAC,SAAD,EAAYU,YAAZ,CAAL,CACKT,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAIZ,SAAS,CAACY,GAAG,CAAC,WAAD,CAAJ,CAF1B;AAIH;;AAED,sBACG;AAAK,IAAA,SAAS,EAAE7B,MAAM,CAAC4C,KAAvB;AAAA,2BACK;AAAM,MAAA,QAAQ,EAAEV,YAAhB;AAAA,6BACI,QAAC,WAAD;AACI,QAAA,YAAY,MADhB;AAEI,QAAA,cAAc,MAFlB;AAGI,QAAA,KAAK,EAAIhB,KAHb;AAII,QAAA,WAAW,EAAIM,WAJnB;AAKI,QAAA,aAAa,EAAIH,iBALrB;AAMI,QAAA,QAAQ,EAAIE,YANhB;AAOI,QAAA,OAAO,MAPX;AAQI,QAAA,SAAS,MARb;AASI,QAAA,WAAW,EAAG,iCATlB;AAUI,QAAA,UAAU,EAAI;AAAEsB,UAAAA,iBAAiB,EAAC,MAAM,IAA1B;AAAgCC,UAAAA,kBAAkB,EAAC,MAAM;AAAzD,SAVlB;AAWI,QAAA,eAAe,EAAI,KAXvB;AAYI,QAAA,eAAe,EAAI,KAZvB;AAaI,QAAA,SAAS,EAAI9C,MAAM,CAAC+C,UAbxB;AAcI,QAAA,MAAM,EAAI7C;AAdd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADH;AAuBH;;GAtDQa,I;;KAAAA,I;AAwDT,eAAeA,IAAf","sourcesContent":["import { useState } from \"react\";\nimport AsyncSelect from 'react-select/async';\nimport makeAnimated from 'react-select/animated';\nimport styles from './Form.module.css';\nimport { getScrollParent } from \"react-select/src/utils\";\n\n\n\nconst customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: '1px dotted pink',\n      color: state.isSelected ? 'red' : 'blue',\n      padding: 20,\n    }),\n    control: (provided) => ({\n        ...provided,\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n  \n      return { ...provided, opacity, transition };\n    }\n  }\n\nfunction Form({setFruit, setResult, fruit}) {\n\n    const [inputValue, setValue] = useState(\"\");\n        \n    const handleInputChange = value => {setValue(value)};\n\n    const handleChange = value => {setFruit(value)};\n\n    const loadOptions = () => {\n        console.log(inputValue)\n        return fetch(\"/fruits\")\n            .then(res => res.json())\n            .then(res => res['names'].filter((a) => a.value.includes(inputValue)))\n        };\n\n    function handleSubmit(event) {\n        console.log(fruit)\n        event.preventDefault();\n        setResult(\"\");\n        const post_options = {\n            method: 'POST',\n            headers: {'Content-Type' : 'application/json'},\n            body: JSON.stringify({ data: fruit })\n        }\n\n        fetch(\"/fruits\", post_options)\n            .then(res => res.json())\n            .then(res => setResult(res['processed']))\n            \n    }    \n      \n    return(\n       <div className={styles.glass}>\n            <form onSubmit={handleSubmit}>\n                <AsyncSelect\n                    cacheOptions\n                    defaultOptions\n                    value = {fruit}\n                    loadOptions = {loadOptions}\n                    onInputChange = {handleInputChange}\n                    onChange = {handleChange}\n                    isMulti\n                    autoFocus\n                    placeholder = \"Type one or several ingredients\"\n                    components = {{ DropdownIndicator:() => null, IndicatorSeparator:() => null }}\n                    openMenuOnFocus = {false}\n                    openMenuOnClick = {false}\n                    className = {styles.classAsync}\n                    styles = {customStyles}\n                />\n            </form>\n        </div>\n    )\n        \n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}